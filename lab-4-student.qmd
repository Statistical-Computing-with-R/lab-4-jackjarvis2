---
title: "Lab 4: Childcare Costs in California"
author: "Jack Jarvis!"
format: html
editor: source
embed-resources: true
execute:  
  error: false
  warning: false
  echo: true
  message: false
  
---

## The Data

In this lab we're going look at the median weekly cost of childcare in
California. A detailed description of the data can be found [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2023/2023-05-09/readme.md).

The data come to us from [TidyTuesday](https://github.com/rfordatascience/tidytuesday).

**0. Load the appropriate libraries and the data.**

```{r}
#| label: setup
library(tidyverse)
library(dplyr)
```

```{r}
#| label: load-data

childcare_costs <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/childcare_costs.csv')

counties <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-05-09/counties.csv')
```

**1. Briefly describe the dataset (~ 4 sentences). What information does it contain?**
The childcare cost data set contains 34567 observations and 61 variables. 
Each observation relates to a year in a certain county and the information of the races, households
and parenting. We see that the numbers relate to cost of a child maybe and the other dataset counties
has the flip code for each county but does not have the variables data. 
## California Childcare Costs

Let's start by focusing only on California. 

**2. Create a `ca_childcare` dataset of childcare costs in California, containing (1) county information and (2) all information from the `childcare_costs` dataset.** 
*Hint: There are 58 counties in CA and 11 years in the dataset. Therefore, your new dataset should have 53 x 11 = 638 observations.*

```{r}
#| label: ca-childcare-costs
ca_counties <- counties %>%
  filter(state_name == "California")

# Merge the childcare_costs dataset with the CA counties data
ca_childcare <- childcare_costs %>%
  filter(county_fips_code %in% ca_counties$county_fips_code) %>%
  left_join(ca_counties, by = "county_fips_code")

# Check the structure and the first few rows to confirm
glimpse(ca_childcare)
head(ca_childcare)
```

**3. Using a function from the `forcats` package, complete the code below to create a new variable where each county is categorized into one of the [10 Census regions](https://census.ca.gov/regions/) in California. Use the Region description (from the plot), not the Region number.**  
*Hint: This is probably a good place to use ChatGPT to reduce on tedious work. But you do need to know how to prompt ChatGPT to make it useful!*

```{r}
#| label: recoding-county-to-census-regions

# Create the county-to-region mapping
county_to_region <- c(
  "Butte" = "Region 1",
  "Colusa" = "Region 1",
  "El Dorado" = "Region 1",
  "Glenn" = "Region 1",
  "Lassen" = "Region 1",
  "Modoc" = "Region 1",
  "Nevada" = "Region 1",
  "Placer" = "Region 1",
  "Plumas" = "Region 1",
  "Sacramento" = "Region 1",
  "Shasta" = "Region 1",
  "Sierra" = "Region 1",
  "Siskiyou" = "Region 1",
  "Sutter" = "Region 1",
  "Tehama" = "Region 1",
  "Yolo" = "Region 1",
  "Yuba" = "Region 1",
  
  "Del Norte" = "Region 2",
  "Humboldt" = "Region 2",
  "Lake" = "Region 2",
  "Mendocino" = "Region 2",
  "Napa" = "Region 2",
  "Sonoma" = "Region 2",
  "Trinity" = "Region 2",
  
  "Alameda" = "Region 3",
  "Contra Costa" = "Region 3",
  "Marin" = "Region 3",
  "San Francisco" = "Region 3",
  "San Mateo" = "Region 3",
  "Santa Clara" = "Region 3",
  "Solano" = "Region 3",
  
  "Alpine" = "Region 4",
  "Amador" = "Region 4",
  "Calaveras" = "Region 4",
  "Madera" = "Region 4",
  "Mariposa" = "Region 4",
  "Merced" = "Region 4",
  "Mono" = "Region 4",
  "San Joaquin" = "Region 4",
  "Stanislaus" = "Region 4",
  "Tuolumne" = "Region 4",
  
  "Monterey" = "Region 5",
  "San Benito" = "Region 5",
  "San Luis Obispo" = "Region 5",
  "Santa Barbara" = "Region 5",
  "Santa Cruz" = "Region 5",
  "Ventura" = "Region 5",
  
  "Fresno" = "Region 6",
  "Inyo" = "Region 6",
  "Kern" = "Region 6",
  "Kings" = "Region 6",
  "Tulare" = "Region 6",
  
  "Riverside" = "Region 7",
  "San Bernardino" = "Region 7",
  
  "Los Angeles" = "Region 8",
  
  "Orange" = "Region 9",
  
  "Imperial" = "Region 10",
  "San Diego" = "Region 10"
)

# Recoding the county_name to census regions
ca_childcare <- ca_childcare |> 
  mutate(county_name = str_remove(county_name, " County")) |>  # Remove " County" suffix
  mutate(census_region = recode(county_name, !!!county_to_region))  # Apply the region mapping

# Check the updated dataframe
head(ca_childcare)

  ...
```


**4. Let's consider the median household income of each region, and how that income has changed over time. Create a table with ten rows, one for each region, and two columns, one for 2008 and one for 2018. The cells should contain the `median` of the median household income (expressed in 2018 dollars) of the `region` and the `study_year`. Arrange the rows by 2018 values.**

```{r}
#| label: median-income-by-region-over-time
income_by_region <- ca_childcare %>%
  filter(study_year %in% c(2008, 2018)) %>%
  group_by(census_region, study_year) %>%
  summarize(median_income = median(mhi_2018, na.rm = TRUE)) %>%
  spread(key = study_year, value = median_income) %>%
  arrange(desc(`2018`))  # Arrange by 2018 values

income_by_region
```


**5. Which California `region` had the lowest `median` full-time median weekly price for center-based childcare for infants in 2018? Does this `region` correspond to the `region` with the lowest `median` income in 2018 that you found in Q4?**  
*Hint: The code should give me the EXACT answer. This means having the code output the exact row(s) and variable(s) necessary for providing the solution.*

```{r}
#| label: lowest-median-weekly-price-2018
lowest_care_price_region <- ca_childcare %>%
  filter(study_year == 2018) %>%
  group_by(census_region) %>%
  summarise(median_infant_care_price = median(infant_care_price_2018, na.rm = TRUE)) %>%
  arrange(median_infant_care_price) %>%
  slice(1)  # Get the region with the lowest median price

# Find the region with the lowest median income in 2018 from the previous question
lowest_income_region <- income_by_region %>%
  slice_min(order_by = `2018`, n = 1)  # Get the region with the lowest median income in 2018

# Display both results to compare
lowest_care_price_region
lowest_income_region
```

**6. The following plot shows, for all ten regions, the change over time of the full-time median price for center-based childcare for infants, toddlers, and preschoolers. Recreate the plot. You do not have to replicate the exact colors or theme, but your plot should have the same content, including the order of the facets and legend, reader-friendly labels, axes breaks, and a loess smoother.**

![Plot to recreate](https://atheobold.github.io/groupworthy-data-science/labs/instructions/images/lab-4-recreate-plot.png)

```{r}
#| label: recreate-plot
ca_childcare_long <- ca_childcare %>%
  select(census_region, study_year, infant_care_price_2018, toddler_care_price_2018, preschool_care_price_2018) %>%
  pivot_longer(cols = c(infant_care_price_2018, toddler_care_price_2018, preschool_care_price_2018),
               names_to = "age_group", values_to = "price") %>%
  filter(!is.na(price))  # Remove any NA values

# Plot using ggplot2
ggplot(ca_childcare_long, aes(x = study_year, y = price, color = age_group)) +
  geom_point(alpha = 0.6) +  # Scatter plot with some transparency
  geom_smooth(method = "loess", se = FALSE, size = 1.2) +  # Loess smoother without standard error ribbon
  facet_wrap(~ age_group, scales = "free_y", ncol = 1) +  # Facets for each age group with free y-axis scales
  labs(
    title = "Change in Full-Time Median Price for Center-Based Childcare (2018 Dollars)",
    x = "Year",
    y = "Median Weekly Price (2018 Dollars)",
    color = "Age Group"
  ) +
  scale_x_continuous(breaks = seq(2008, 2018, by = 2)) +  # X-axis breaks at every 2 years
  theme_minimal() +  # Clean minimal theme
  theme(
    strip.text = element_text(size = 12, face = "bold"),  # Bold facet labels
    legend.position = "bottom",  # Move legend to the bottom
    legend.title = element_text(size = 12),  # Adjust legend title size
    legend.text = element_text(size = 10)  # Adjust legend text size
  )
```


## Median Household Income vs. Childcare Costs for Infants

**7. Create a scatterplot showing the relationship between median household income (expressed in 2018 dollars) and the full-time median weekly price charged for center-based childcare for an infant in California. Overlay a linear regression line (lm) to show the trend.**

```{r}
#| label: scatterplot-median-income-vs-childcare-cost

```

**8. Look up the documentation for `lm()` and fit a linear regression model to the relationship shown in your plot above.**

```{r}
# complete the code provided
reg_mod1 <- lm()
summary(reg_mod1)
```

**9. Using the output from `summary()`, write out the estimated regression line (recall: $y = mx + b$).**

**10. Do you have evidence to conclude there is a relationship between the median household income and the median weekly cost of center-based childcare for infants in California? Cite values from your `summary()` output to support your claim!**
